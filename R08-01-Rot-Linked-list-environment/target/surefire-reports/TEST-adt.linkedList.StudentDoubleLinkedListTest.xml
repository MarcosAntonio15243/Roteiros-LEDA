<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="adt.linkedList.StudentDoubleLinkedListTest" time="0.106" tests="53" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/test-classes:/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/classes:/home/marcos/.m2/repository/junit/junit/4.13.1/junit-4.13.1.jar:/home/marcos/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/surefire/surefirebooter-20230924222526266_3.jar /home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/surefire 2023-09-24T22-25-25_961-jvmRun1 surefire-20230924222526266_1tmp surefire_0-20230924222526266_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/test-classes:/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/classes:/home/marcos/.m2/repository/junit/junit/4.13.1/junit-4.13.1.jar:/home/marcos/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/marcos"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-04-18"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment/target/surefire/surefirebooter-20230924222526266_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.7+7-Ubuntu-0ubuntu122.04.2"/>
    <property name="user.name" value="marcos"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="5.15.0-76-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/marcos/.m2/repository"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="17.0.7"/>
    <property name="user.dir" value="/home/marcos/Área de Trabalho/R08-01-Rot-Linked-list-environment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="17.0.7+7-Ubuntu-0ubuntu122.04.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="testToArrayRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.004"/>
  <testcase name="testRemoveElementoNullListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testGetHeadAndLastListaMaisDeUmElemento" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="inserePrimeiroListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveLastComElementos" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="testInsereRemovePrimeiroListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveMudandoHead" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testGetHeadAndLastListaUmElemento" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testGetHeadAndLastListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveLastUnicoElemento" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveFirst" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveLastComElementosRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveLastUnicoElementoRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsertFirst" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveFirstUnderflow" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveLastOverride" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveDouble" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testAdicionaMudandoLast" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="testRemoveFirstUnicoElementoRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveComElementosRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsereNormalRemovePrimeiroListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="testRemoveLast" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="insereRemovePrimeiroListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsereListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="testRemoveComElementos" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveFirstListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="testRemoveElementoListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveFirstComElementosRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveLastListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInserePrimeiroListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="insereRemoveListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsereRemoveListaVaziaRecursivo" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveFirstComElementos" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.001"/>
  <testcase name="insereNormalRemovePrimeiroListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveFirstUnicoElemento" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="insereListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.01"/>
  <testcase name="testGetElementoExistente" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testToArray" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testSize" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsertNullListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsertListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoverElemento" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoverElementoListaUnitaria" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testGetElementoNull" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testGetElementoListaVazia" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsertNullListaComElementos" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testGetElementoInexistente" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsert" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testIsEmpty" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemove" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testSearch" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testRemoveElementoInexistente" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
  <testcase name="testInsertListaComElementos" classname="adt.linkedList.StudentDoubleLinkedListTest" time="0.0"/>
</testsuite>